# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '549c752c-caf8-4b16-b06d-8f7e9f185270'
  imageRepository: 'azurekeyvaultmultienvironmentdemo'
  containerRegistry: 'devdpregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/AzureKeyVaultDemo/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      displayName: Add Secret
      inputs:
        targetType: 'inline'
        script: >
          echo '{ "AzureKeyVault" : { "Endpoint": "$(KeyVaultEndPoint)", "ClientId" : "$(ClientId)" , "ClientSecret" : "$(ClientSecret)" } }' > ./AzureKeyVaultDemo/azurekeyvault.json
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo '<?xml version="1.0" encoding="utf-8"?><configuration>
            <packageSources>
              <add key="DiligentProgrammerFeed" value="$(PrivateNugetRepoURL)" />
            </packageSources>
            <packageSourceCredentials>
              <DiligentProgrammerFeed>
                <add key="Username" value="$(NugetUserName)" />
                <add key="ClearTextPassword" value="$(NugetPassword)" />
              </DiligentProgrammerFeed>
            </packageSourceCredentials>
          </configuration>' > ./AzureKeyVaultDemo/nuget.config
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
